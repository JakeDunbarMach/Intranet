@model AppModel.Entity

@{
    ViewBag.Title = "Entity";
}

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "frmEntity" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.EntityID);
    <input type="hidden" value=@ViewBag.PermissionID.ToString() id="txtPermissionID" />

    //When EntityID greater than 0, you are updating existing entity
    if (Model.EntityID > 0)
    {
        <h2 style="display:inline-block;">Update Entity @Html.DisplayFor(model => model.EntityRef)</h2>
    }
    else
    {
        <h2 style="display:inline-block;">Add new Entity</h2>
    }
    <button class="btn btn-link" id="btnEntityClose"><i class="fas fa-reply btn-link"></i> Return to Entity list</button>

    <div>
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link active" role="tab" aria-selected="true" href="#tabDetails">Details</a>
            </li>
            <li class="nav-item">
                @*Displays option to upload document when updating entity*@
                @if (Model.EntityID > 0)
                {
                    <a data-toggle="tab" class="nav-link inactive" role="tab" aria-selected="true" href="#tabDocuments">Documents</a>
                }
            </li>
        </ul>
    </div>
    <div class="tab-content">
        <div id="tabDetails" class="tab-pane fade show active" role="tabpanel">

            <div class="col-md-5">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EntityID)


                <div class="form-group row required">
                    @Html.LabelFor(model => model.EntityTypeID, htmlAttributes: new { @class = "col-form-label col-md-4 col-sm-4 col-xs-4" })
                    <div class="col-md-8 col-sm-8 col-xs-8">
                        @Html.DropDownListFor(model => model.EntityTypeID, new SelectList(ViewBag.EntityTypeList, "Value", "Text"), "Please Select....", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EntityTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row required">
                    @Html.LabelFor(model => model.EntityDate, htmlAttributes: new { @class = "col-form-label col-md-4 col-sm-4 col-xs-4" })
                    <div class="col-md-8 col-sm-8 col-xs-8">
                        @Html.EditorFor(model => model.EntityDate, new { htmlAttributes = new { @Value = Model.EntityDate != DateTime.Parse("01/01/0001 00:00:00") ? Model.EntityDate.ToString("dd/MM/yyyy") : "", @class = "form-control date-picker" } })
                        @Html.ValidationMessageFor(model => model.EntityDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*///Code for Checkbox
                    <div class="form-group row">
                        @Html.LabelFor(model => model.CheckBox1, htmlAttributes: new { @class = "col-form-label col-md-4 col-sm-4 col-xs-4" })
                        <div class="col-md-8 col-sm-8 col-xs-8">
                            @Html.CheckBoxFor(model => model.CheckBox1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CheckBox1, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*///Code for Textbox
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Textbox1, htmlAttributes: new { @class = "col-form-label col-md-4 col-sm-4 col-xs-4" })
                        <div class="col-md-8 col-sm-8 col-xs-8">
                            @Html.EditorFor(model => model.Textbox1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Textbox1, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @if (@ViewBag.PermissionID == 2 || @ViewBag.PermissionID == 3)
                {
                    <input type="button" value="Save" class="btn btn-primary float-right" id="btnEntitySave" />
                }
            </div>
            <div class="clear"></div>

            <div id="ValidationError" class='field-validation-error'></div>

        </div>
        <div id="tabDocuments" class="tab-pane fade">
            <div id="lstDocuments">
            </div>
        </div>
    </div>
}

<script src="~/Scripts/Entity/Edit.js?id=@ViewBag.JavaScriptVersion"></script>
